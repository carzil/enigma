include(CMakeParseArguments)

function(PATH_TO_NAME path)
    string(REPLACE "${PROJECT_SOURCE_DIR}" "" path "${path}")
    if(UNIX)
        string(REGEX REPLACE "/" "-" result "${path}")
    else()
        string(REPLACE "\\" "-" result "${path}")
    endif()
    string(REGEX REPLACE "^-" "" result "${result}")
    set(_RESULT "${result}" PARENT_SCOPE)
endfunction()

function(TARGET_NAME)
    PATH_TO_NAME("${CMAKE_CURRENT_LIST_DIR}")
    set(TARGET_NAME "${_RESULT}" PARENT_SCOPE)
endfunction()

function(TARGET_LIB)
    set(oneValueArgs NAME)
    set(multiValueArgs SOURCES LINK_DEPS)
    cmake_parse_arguments(TGTLIB "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
    if (TGTLIB_NAME)
        set(TARGET_NAME "${TGTLIB_NAME}")
    else()
        TARGET_NAME()
    endif()
    add_library("${TARGET_NAME}" STATIC ${TGTLIB_SOURCES})
    target_link_libraries("${TARGET_NAME}" ${TGTLIB_LINK_DEPS})
endfunction()

function(TARGET_EXE)
    set(oneValueArgs NAME)
    set(multiValueArgs SOURCES LINK_DEPS)
    cmake_parse_arguments(TGTEXE "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
    if (TGTEXE_NAME)
        set(TARGET_NAME "${TGTEXE_NAME}")
    else()
        TARGET_NAME()
    endif()
    add_executable("${TARGET_NAME}" ${TGTEXE_SOURCES})
    target_link_libraries("${TARGET_NAME}" ${TGTEXE_LINK_DEPS})
endfunction()

function(TARGET_TEST)
    set(oneValueArgs NAME)
    set(multiValueArgs SOURCES LINK_DEPS)
    cmake_parse_arguments(TGTTST "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
    if (TGTTST_NAME)
        set(TARGET_NAME "${TGTTST_NAME}")
    else()
        TARGET_NAME()
    endif()
    TARGET_EXE(SOURCES ${TGTTST_SOURCES} LINK_DEPS ${TGTTST_LINK_DEPS})
    add_test(NAME "${TARGET_NAME}" COMMAND "${TARGET_NAME}" DEPENDS "${TARGET_NAME}")
endfunction()

